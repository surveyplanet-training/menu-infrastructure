#+TITLE: k8s cluster provision and setup
#+PROPERTY: header-args :tangle "setup.sh"

*   Terraform
**  apply
#+begin_src bash
cd terraform
terraform apply -var-file=vars.tfvars --auto-approve
#+end_src
**  export acm_certificate_arn
#+begin_src bash
export acm_certificate_arn=$(terraform output -json | jq 'map(.value.acm_certificate_arn) | sort[]')
#+end_src
**  go back up a directory
#+begin_src bash
cd ..
#+end_src
*   update kubeconfig
#+begin_src bash
aws eks --region us-west-2 update-kubeconfig --name menu-test --profile spadmin
#+end_src
*   Create namespaces
**  create argocd namespace
#+begin_src bash
kubectl create namespace argocd
#+end_src
**  create menu namespace
#+begin_src bash
kubectl create namespace menu
#+end_src
**  create monitoring namespace
#+begin_src bash
kubectl create namespace monitoring
#+end_src
*   Apply secrets
#+begin_src bash
kubectl apply -f secrets/
#+end_src
*   Monitoring
**  kube-state-metrics
#+begin_src bash
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts && helm repo update && helm install ksm prometheus-community/kube-state-metrics --set image.tag=v2.2.0 --namespace monitoring
#+end_src
**  Grafana Agent
**** install
#+begin_src bash
MANIFEST_URL=https://raw.githubusercontent.com/grafana/agent/v0.23.0/production/kubernetes/agent-bare.yaml NAMESPACE=monitoring /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/grafana/agent/release/production/kubernetes/install-bare.sh)" | kubectl apply -f -
#+end_src
**** apply logs agent
#+begin_src bash
kubectl apply -f manifests/kubernetes-infrastructure/grafana-agent/
#+end_src
**** rollout restart
#+begin_src bash
kubectl rollout restart deployment/grafana-agent -n monitoring
#+end_src
*   Networking
**   ALB
***  aws-load-balancer-controller
#+begin_src bash
helm repo add eks https://aws.github.io/eks-charts

helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=menu-test
#+end_src
**   external DNS
#+begin_src bash
kubectl apply -f manifests/kubernetes-infrastructure/externalDNS/
#+end_src
*   Argocd
**  setup
*** install
#+begin_src bash
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
#+end_src
*** port forward :tangle no
#+begin_src bash :tangle no
kubectl port-forward svc/argocd-server -n argocd 8080:443
#+end_src
*** Get admin pass :tangle no
#+begin_src bash :tangle no
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
#+end_src
*** Login and change pass :tangle no
#+begin_src bash :tangle no
argocd login localhost:8080
argocd account update-password
#+end_src
*   Menu
**   API
***  apply menu app manifests
#+begin_src bash
kubectl apply -f manifests/kubernetes-infrastructure/argocd/
#+end_src
***  update ingress with acm_certificate_arn
#+begin_src bash
yq e -i '.metadata.annotations."alb.ingress.kubernetes.io/certificate-arn" = env(acm_certificate_arn)' manifests/menu/api/ingress.yml
#+end_src
***  apply menu ingress
#+begin_src bash
kubectl apply -f manifests/menu/api/ingress.yml
#+end_src

