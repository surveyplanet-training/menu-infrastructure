*   initial
requierments: docker, kubectl, curl
**   install
#+begin_src bash
curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
#+end_src
**   create cluster
#+begin_src bash
k3d cluster create menu_api
#+end_src
**   change kubeconfig context
#+begin_src bash
k3d kubeconfig merge menu-api --output ~/.kube/config --kubeconfig-switch-context
#+end_src
to use context without changing default context:
#+begin_src bash
export KUBECONFIG=$(k3d kubeconfig write mycluster)
#+end_src
**  argocd
*** install
#+begin_src bash
kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
#+end_src
*** port forward
#+begin_src bash
kubectl port-forward svc/argocd-server -n argocd 8080:443
#+end_src
***  Get admin pass
#+begin_src bash
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
#+end_src
***  Login and change pass
#+begin_src bash
argocd login localhost:8080
argocd account update-password
#+end_src

*   metalb nginxingress
**  create cluster
#+begin_src bash
k3d cluster create menu-api --api-port 6550 --agents 1 --k3s-arg "--disable=traefik@server:0" --k3s-arg "--disable=servicelb@server:0"
#+end_src
**  metallb
***  install metallb
#+begin_src bash
sudo kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/namespace.yaml
sudo kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/metallb.yaml
#+end_src
***  apply metallb config
#+begin_src bash
kubes apply -f manifests/metallb/config.yml -n metallb-system
#+end_src
**  nginx ingress TODO
**  argocd
*** install
#+begin_src bash
sudo kubectl create namespace argocd
sudo kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
#+end_src
*** port forward
#+begin_src bash
sudo kubectl port-forward svc/argocd-server -n argocd 8080:443
#+end_src
*** Get admin pass
#+begin_src bash
sudo kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
#+end_src
*** Login and change pass
#+begin_src bash
argocd login localhost:8080
argocd account update-password
#+end_src
